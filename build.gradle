plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.meteordev.org/releases" }
    maven { url "https://maven.meteordev.org/snapshots" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://gitlab.com/api/v4/projects/32473285/packages/maven" } // google-chat
    maven { url "https://gitlab.com/api/v4/projects/25805200/packages/maven" } // libjf
}

dependencies {
    minecraft "com.mojang:minecraft:$project.minecraft_version"
    mappings "net.fabricmc:yarn:$project.minecraft_version+$project.yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$project.loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$project.fabric_version"

    modImplementation "meteordevelopment:meteor-client:$project.meteor_version"
    modImplementation "com.terraformersmc:modmenu:$modmenu_version"

    include modImplementation("io.gitlab.jfronny:googlechat:$project.googlechat_version")
    include modImplementation("io.gitlab.jfronny.libjf:libjf-config-v0:$project.jfapi_version")
    include modImplementation("io.gitlab.jfronny.libjf:libjf-translate-v1:$project.jfapi_version")
    include("io.gitlab.jfronny.libjf:libjf-unsafe-v0:$project.jfapi_version")
    include("io.gitlab.jfronny.libjf:libjf-base:$project.jfapi_version")
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "mc_version": project.minecraft_version,
                "gh_hash": System.getenv("GITHUB_SHA") ?: ""
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}
